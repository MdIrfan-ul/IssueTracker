
    
    <section class="py-5 bg-success p-2 text-dark bg-opacity-10">
        <div class="container">
            <!-- Project Details -->
        
        <div class="mb-4">
            <h2 class="mb-3" id="project-name"><%=projectDetails.pName%></h2>
            <p class="lead mb-1" id="project-description"><%=projectDetails.description%></p>
            <p class="mb-0" id="project-author"><%=projectDetails.author?projectDetails.author.name:'Unknown Author'%></p>
        </div>

        <!-- Filters and Search -->
<div class="mb-4">
    <form action="/filter/<%=projectDetails.id%>" method="post">
        <div class="row">
            <!-- Filter by Labels -->
            <div class="col-md-4 mb-2">
                <select id="filterLabels" name="selectedLabels" class="form-select" multiple aria-label="Select Labels">
                    <option selected>Filter by Labels</option>
                    <option value="frontend">FrontEnd</option>
                    <option value="backend">BackEnd</option>
                    <option value="database">DataBase</option>
                    <option value="deployment">Deployment</option>
                    <option value="bug">Bug</option>
                    <!-- Add more labels as needed -->
                </select>
            </div>
            <!-- Search by Description -->
            <div class="col-md-4 mb-2">
                <input id="searchDescription" name="descriptionQuery" type="text" class="form-control" placeholder="Search by Description">
            </div>
            <!-- Search by Author -->
            <div class="col-md-4 mb-2">
                <input id="searchAuthor" name="authorQuery" type="text" class="form-control" placeholder="Search by Author">
            </div>
        </div>
        
        <!-- Apply Filters Button -->
        <div class="text-end mb-3">
            <button type="submit" class="btn btn-secondary">Apply Filters</button>
        </div>
    </form>
</div>

        <!-- Issues List -->
        <div class="table-responsive">
            <table class="table table-hover table-danger">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Description</th>
                        <th>Labels</th>
                        <th>Author</th>
                        <th>Raised At</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody id="issues-list">
                    <!-- Example Issue -->
                    <%issueDetails.forEach(issue=>{%>
                    <tr>
                        <td><%=issue.title%></td>
                        <td><%=issue.description%></td>
                        <td>
                            <% if (issue.labels && Array.isArray(issue.labels) && issue.labels.length > 0) { %>
                                <%= issue.labels.join(', ') %>
                            <% } else { %>
                                No labels
                            <% } %>
                        </td>
                        <td><%= issue.author?issue.author.name:'Unknown Author'%></td>
                        <td><%=issue.timestamp%></td>
                        <td><a  href ="/deleteIssue/<%=issue.id%>" type="button"class="btn btn-primary ">Delete issue</a></td>
                    </tr>
                    <%})%>
                    <!-- Add more issues as needed -->
                </tbody>
            </table>
        </div>
            <!-- Create Issue Button -->
            <div class="text-center mt-4">
                <button type="button"class="btn btn-primary " onclick="deleteProject('<%=projectDetails._id%>')">Delete Project</button>
                <a type="button" class="btn btn-primary" href="/newIssue/<%=projectDetails.id%>">Create Issue</a>
                <a type="button" class="btn btn-primary" href="/">Back to Home</a>
            </div>
            <div>
                <canvas id="myChart"></canvas>
              </div>
        </div> 
    </section>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
         const issueDetails = <%-JSON.stringify(issueDetails)%>
         function countIssuesByLabel(issues) {
    const counts = { Frontend: 0, Backend: 0, DataBase: 0, Deployment: 0, Bug: 0 };

    issues.forEach(issue => {
      if (issue.labels && Array.isArray(issue.labels)) {
        issue.labels.forEach(label => {
          switch (label.toLowerCase()) {
            case 'frontend':
              counts.Frontend++;
              break;
            case 'backend':
              counts.Backend++;
              break;
            case 'database':
              counts.DataBase++;
              break;
            case 'deployment':
              counts.Deployment++;
              break;
            case 'bug':
              counts.Bug++;
              break;
            default:
              break;
          }
        });
      }
    });

    return counts;
  }

  // Get issue counts by label
  const issueCounts = countIssuesByLabel(issueDetails);

  // Extract data for the chart
  const chartData = [
    issueCounts.Frontend,
    issueCounts.Backend,
    issueCounts.DataBase,
    issueCounts.Deployment,
    issueCounts.Bug
  ];
      const ctx = document.getElementById('myChart');
    
      new Chart(ctx, {
        type: 'bar',
        data: {
          labels: ['Frontend', 'Backend', 'DataBase', 'Deployment', 'Bug'],
          datasets: [{
            label: 'Issues',
            data: chartData,
            borderWidth: 1,
            backgroundColor: [
          'rgba(75, 192, 192, 0.2)',  // Light Cyan
          'rgba(54, 16, 235, 0.2)',  // Light Blue
          'rgba(255, 206, 86, 0.2)',  // Light Yellow
          'rgba(75, 192, 192, 0.2)',  // Light Cyan
          'rgba(255, 99, 132, 0.2)'   // Light Red
        ],
        borderColor: [
          'rgba(75, 192, 192, 1)',
          'rgba(54, 162, 235, 1)',
          'rgba(255, 206, 86, 1)',
          'rgba(75, 192, 192, 1)',
          'rgba(255, 99, 132, 1)'
        ],
          }]
          
        },
        options: {
          scales: {
            y: {
              beginAtZero: true,
            }
          }
        }
      });
    </script>
    

